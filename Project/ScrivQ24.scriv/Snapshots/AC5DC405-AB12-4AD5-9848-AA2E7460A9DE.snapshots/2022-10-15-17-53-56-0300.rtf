{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 CodeNewRoman;}
{\colortbl;\red255\green255\blue255;\red196\green73\blue133;}
{\*\expandedcolortbl;;\cssrgb\c81961\c38431\c59216;}
\pard\tx0\tx0\tx567\tx1134\tx1701\sl312\slmult1\pardirnatural\qj\partightenfactor0

\f0\fs24 \cf0 <$Scr_Ps::0>
\f1\fs20 #| output: asis\
#| echo: true\
#| code-overflow: wrap\
#| code-line-numbers: true\
\
# Place your Python code here, see {\field{\*\fldinst{HYPERLINK "https://quarto.org/docs/computations/python.html"}}{\fldrslt https://quarto.org/docs/computations/python.html}} \
\pard\tx0\tx0\tx567\tx1134\tx1701\sl312\slmult1\pardirnatural\qj\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
\
import unicodedata\
\
# Primeira demonstra\'e7\'e3o: NFD e NFC\
\
characters = '\uc0\u7940 '\
for character in characters:\
    print(hex(ord(character)).upper(),character,unicodedata.name(character).lower()) \
\
# Em seguida, obteremos sua forma decomposta com NFD:\
for character in unicodedata.normalize('NFD', characters):\
    print(hex(ord(character)).upper(),character,unicodedata.name(character).lower())\
\
# E sua forma decomposta e recomposta com NF\
for character in unicodedata.normalize('NFC', characters):\
    print(hex(ord(character)).upper(),character,unicodedata.name(character).lower()) \
\

\f0\fs24 <!$Scr_Ps::0>}