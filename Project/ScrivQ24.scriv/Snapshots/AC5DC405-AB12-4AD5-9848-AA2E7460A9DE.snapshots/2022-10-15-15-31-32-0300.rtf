{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 CodeNewRoman;}
{\colortbl;\red255\green255\blue255;\red191\green186\blue199;\red196\green73\blue133;\red104\green109\blue202;
\red19\green103\blue172;\red202\green207\blue105;}
{\*\expandedcolortbl;;\cssrgb\c79608\c78039\c81961;\cssrgb\c81961\c38431\c59216;\cssrgb\c48235\c51765\c83137;
\cssrgb\c5882\c48627\c72941;\cssrgb\c83137\c83922\c48627;}
\pard\tx0\tx0\tx567\tx1134\tx1701\sl312\slmult1\pardirnatural\qj\partightenfactor0

\f0\fs24 \cf0 <$Scr_Ps::0>
\f1\fs20 #| label: fig-label\
#| fig-cap: Place your figure caption here.\
# Place your Python code here, see {\field{\*\fldinst{HYPERLINK "https://quarto.org/docs/computations/python.html"}}{\fldrslt https://quarto.org/docs/computations/python.html}} \
\pard\tx0\tx0\tx567\tx1134\tx1701\sl312\slmult1\pardirnatural\qj\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\
\cf3 #!/usr/bin/env\'a0python3\
#\'a0-*-\'a0coding:\'a0UTF-8\'a0-*-\cf2 \
\
\cf3 #\'a0Vers\'e3o\'a0pretty-print.\cf2 \
\
\cf4 import\cf2 \'a0unicodedata\
\
\cf5 print\cf2 (\cf6 '================================='\cf2 )\
\cf5 print\cf2 (\cf6 'Primeira\'a0demonstra\'e7\'e3o:\'a0NFD\'a0e\'a0NFC'\cf2 )\
\cf5 print\cf2 (\cf6 '=================================\\n'\cf2 )\
\
\cf5 print\cf2 (\cf6 'Escolhemos\'a0um\'a0caractere\'a0composto\'a0e\'a0obtermos\'a0seu\'a0c\'f3digo\'a0no\'a0padr\'e3o\'a0Unicode\'a0e\'a0seu\'a0nome\'a0de\'a0acordo\'a0com\'a0a\'a0tabela\'a0Unicode:\\n'\cf2 )\
characters\'a0=\'a0\cf6 '\uc0\u7940 '\cf2 \
\cf4 for\cf2 \'a0character\'a0\cf4 in\cf2 \'a0characters:\
\'a0\'a0\'a0\'a0\cf5 print\cf2 (\cf5 hex\cf2 (\cf5 ord\cf2 (character)).\cf5 upper\cf2 (),character,unicodedata.name(character).\cf5 lower\cf2 ())\'a0\
\
\cf5 print\cf2 (\cf6 '\\nEm\'a0seguida,\'a0obteremos\'a0sua\'a0forma\'a0decomposta\'a0com\'a0NFD:\\n'\cf2 )\
\cf4 for\cf2 \'a0character\'a0\cf4 in\cf2 \'a0unicodedata.normalize(\cf6 'NFD'\cf2 ,\'a0characters):\
\'a0\'a0\'a0\'a0\cf5 print\cf2 (\cf5 hex\cf2 (\cf5 ord\cf2 (character)).\cf5 upper\cf2 (),character,unicodedata.name(character).\cf5 lower\cf2 ())\
\
\cf5 print\cf2 (\cf6 '\\nE\'a0sua\'a0forma\'a0composta\'a0com\'a0NFC\'a0(obs.:\'a0a\'a0forma\'a0\'e9\'a0decomposta\'a0antes\'a0de\'a0ser\'a0recomposta):\\n'\cf2 )\
\cf4 for\cf2 \'a0character\'a0\cf4 in\cf2 \'a0unicodedata.normalize(\cf6 'NFC'\cf2 ,\'a0characters):\
\'a0\'a0\'a0\'a0\cf5 print\cf2 (\cf5 hex\cf2 (\cf5 ord\cf2 (character)).\cf5 upper\cf2 (),character,unicodedata.name(character).\cf5 lower\cf2 ())\'a0\
\
\
\cf5 print\cf2 (\cf6 '\\n\\n==================================='\cf2 )\
\cf5 print\cf2 (\cf6 'Segunda\'a0demonstra\'e7\'e3o:\'a0oxia\'a0e\'a0tonos'\cf2 )\
\cf5 print\cf2 (\cf6 '===================================\\n'\cf2 )\
\
\cf5 print\cf2 (\cf6 'Selecionamos\'a0tr\'eas\'a0caracteres:\\n'\cf2 )\
characters\'a0=\'a0\cf6 '\uc0\u940 \u8053 \'e9'\cf2 \
\cf4 for\cf2 \'a0character\'a0\cf4 in\cf2 \'a0characters:\
\'a0\'a0\'a0\'a0\cf5 print\cf2 (\cf5 hex\cf2 (\cf5 ord\cf2 (character)).\cf5 upper\cf2 (),character,unicodedata.name(character).\cf5 lower\cf2 ())\'a0\
\
\cf5 print\cf2 (\cf6 '\\nE\'a0obtemos\'a0a\'a0forma\'a0decomposta\'a0de\'a0cada\'a0um.\'a0Observe\'a0como,\'a0no\'a0processo\'a0de\'a0decomposi\'e7\'e3o\'a0(NFD),\'a0todos\'a0os\'a0acentos\'a0s\'e3o\'a0normalizados\'a0em\'a0acentos\'a0agudo.\\n'\cf2 )\
decomposed_str\'a0=\'a0unicodedata.normalize(\cf6 'NFD'\cf2 ,\'a0characters)\
\cf4 for\cf2 \'a0character\'a0\cf4 in\cf2 \'a0decomposed_str:\
\'a0\'a0\'a0\'a0\cf5 print\cf2 (\cf5 hex\cf2 (\cf5 ord\cf2 (character)).\cf5 upper\cf2 (),character,unicodedata.name(character).\cf5 lower\cf2 ())\'a0\'a0\
\
\cf5 print\cf2 (\cf6 '\\nEm\'a0seguida,\'a0recompomos\'a0os\'a0caracteres\'a0acima\'a0utilizando\'a0a\'a0normaliza\'e7\'e3o\'a0can\'f4nica\'a0de\'a0composi\'e7\'e3o\'a0(NFC).\\n'\cf2 )\
recomposed_str\'a0=\'a0unicodedata.normalize(\cf6 'NFC'\cf2 ,\'a0decomposed_str)\
\cf4 for\cf2 \'a0character\'a0\cf4 in\cf2 \'a0recomposed_str:\
\'a0\'a0\'a0\'a0\cf5 print\cf2 (\cf5 hex\cf2 (\cf5 ord\cf2 (character)).\cf5 upper\cf2 (),character,unicodedata.name(character).\cf5 lower\cf2 ())\'a0\
\
\
\cf5 print\cf2 (\cf6 '\\n\\n==================================='\cf2 )\
\cf5 print\cf2 (\cf6 'Terceira\'a0demonstra\'e7\'e3o:\'a0NFKD\'a0e\'a0NFKC*'\cf2 )\
\cf5 print\cf2 (\cf6 '===================================\\n'\cf2 )\
\cf3 #\'a0*\'a0Ausente\'a0no\'a0artigo\cf2 \
\
\cf5 print\cf2 (\cf6 'A\'a0normaliza\'e7\'e3o\'a0de\'a0compatibilidade\'a0transforma\'a0caracteres\'a0em\'a0formas\'a0compat\'edveis,\'a0mas\'a0**n\'e3o\'a0equivalentes**.\'a0Isso\'a0significa\'a0que,\'a0partindo\'a0de\'a0uma\'a0determinada\'a0forma,\'a0n\'e3o\'a0\'e9\'a0mais\'a0poss\'edvel\'a0retornar\'a0a\'a0ela\'a0depois\'a0que\'a0a\'a0modifica\'e7\'e3o\'a0\'e9\'a0feita.\\n'\cf2 )\
characters\'a0=\'a0\cf6 '\'99'\cf2 \
\
\cf5 print\cf2 (\cf6 '\'99\'a0normalizado\'a0com\'a0NFKD:'\cf2 ,\'a0unicodedata.normalize(\cf6 'NFKD'\cf2 ,\'a0characters))\
\cf5 print\cf2 (\cf6 '\'99\'a0normalizado\'a0com\'a0NFKC:'\cf2 ,\'a0unicodedata.normalize(\cf6 'NFKC'\cf2 ,\'a0characters))\cf0 \kerning1\expnd0\expndtw0 \
\
\pard\tx0\tx0\tx567\tx1134\tx1701\sl312\slmult1\pardirnatural\qj\partightenfactor0

\f0\fs24 \cf0 <!$Scr_Ps::0>}